version: '3'
services:
    kafka-publisher:
        build:
            context: ./kafka-publisher
        image: kafka-publisher
        container_name: kafka-publisher
        expose:
            - "5000"
        ports:
        -   "5000:5000"
        depends_on:
            - kafka
            - zookeeper
        environment:
            KAFKA_BOOTSTRAP_SERVER: "kafka:9092"
            INITIAL_DELAY: 30000
            INTERVAL: 3000
            TOPICS: "ho-1,ho-2"
        restart: "unless-stopped"
    kafka-subscriber:
        build:
            context: ./kafka-subscriber
        image: kafka-subscriber
        container_name: kafka-subscriber
        expose:
            - "5001"
        depends_on:
            -   kafka
            -   zookeeper
        restart: "unless-stopped"
        environment:
            KAFKA_BOOTSTRAP_SERVER: "kafka:9092"
            KAFKA_GROUP_ID: "hobook"
            TOPICS: "ho-1"
    kafka-subscriber-2:
        build:
            context: ./kafka-subscriber-2
        image: kafka-subscriber-2
        container_name: kafka-subscriber-2
        expose:
            - "5002"
        depends_on:
            - kafka
            - zookeeper
        restart: "unless-stopped"
        environment:
            KAFKA_BOOTSTRAP_SERVER: "kafka:9092"
            KAFKA_GROUP_ID: "hobook"
            TOPICS: "ho-1"
    zookeeper:
        container_name: zookeeper
        image: confluentinc/cp-zookeeper:5.5.1
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        healthcheck:
            test: "echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT"
            start_period: 30s
    kafka:
        container_name: kafka
        image: confluentinc/cp-kafka:5.5.1
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        restart: unless-stopped
        environment:
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            KAFKA_ADVERTISED_HOST_NAME: kafka
            KAFKA_CREATE_TOPICS: "ho-1:2:1, ho-2:1:1:delete" # Topic명:Partition개수:Replica개수:cleanup.policy(compact or delete)
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        healthcheck:
            test: [ "CMD", "nc", "-z", "localhost", "9092" ]
            start_period: 30s